#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mkp_input_listener { input-processors = <&zip_temp_layer MOUSE 180>; };

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    //tapping-term-ms = <200>;

    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        macro_ID: macro1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N9 &kp N0 &kp N0 &kp N4 &kp N0 &kp N5 &kp N0 &kp N4 &kp N7 &kp N3 &kp TAB>;
            label = "MACRO1";
        };

        macro_P: macro2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp N7 &kp N4 &kp N8 &kp N7 &kp N7 &kp N5 &kp N9 &kp LS(B) &kp I &kp Y &kp O &kp U &kp G &kp A &kp RET>;
            label = "MACRO2";
        };

        Mouse_double: Mouse_macro1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&mkp LCLK>,
                <&macro_wait_time 100>,
                <&mkp LCLK>,
                <&macro_wait_time 100>;

            label = "MOUSE_MACRO1";
        };

        macro_hankaku_eng: macro_hankaku_eng {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F9 &kp F8>;
            label = "MACRO_HANKAKU_ENG";
        };

        macro_hankaku_kana: macro_hankaku_kana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F7 &kp F8>;
            label = "MACRO_HANKAKU_KANA";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_hankaku_eng {
            bindings = <&macro_hankaku_eng>;
            key-positions = <8 9>;
        };

        combo_hankaku_kana {
            bindings = <&macro_hankaku_kana>;
            key-positions = <7 8>;
        };

        combo_double_click {
            bindings = <&Mouse_double>;
            key-positions = <36 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&lt 4 ESCAPE          &kp Q             &kp W            &kp E        &kp R       &kp T               &kp Y            &kp U  &kp I      &kp O    &kp P      &kp MINUS
&mt LCTRL LANGUAGE_2  &kp A             &kp S            &kp D        &kp F       &kp G               &kp H            &kp J  &kp K      &kp L    &kp SEMI   &mt RCTRL EQUAL
&mt LSHIFT TAB        &kp Z             &kp X            &kp C        &kp V       &kp B               &kp N            &kp M  &kp COMMA  &kp DOT  &kp SLASH  &mt RSHIFT DELETE
&mt LGUI HOME         &mt LEFT_ALT END  &lt 5 LA(GRAVE)  &lt 1 SPACE  &lt 3 APOS             &kp RET  &lt 3 BACKSPACE                                        &lt 2 BACKSLASH
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&none           &none   &none     &kp UP_ARROW  &none      &none              &none            &kp KP_N7        &kp KP_N8  &kp KP_N9  &kp KP_DIVIDE  &kp KP_ASTERISK
&kp KP_NUMLOCK  &none   &kp LEFT  &kp DOWN      &kp RIGHT  &none              &none            &kp KP_N4        &kp KP_N5  &kp KP_N6  &kp KP_PLUS    &kp KP_MINUS
&none           &none   &none     &none         &none      &none              &kp KP_DOT       &kp KP_NUMBER_1  &kp KP_N2  &kp KP_N3  &kp KP_EQUAL   &trans
&trans          &trans  &trans    &trans        &trans                &trans  &kp KP_NUMBER_0                                                        &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&none  &none  &none   &none   &none   &none              &none       &none         &none         &kp PRINTSCREEN  &kp RA(F11)  &kp RC(PAUSE_BREAK)
&none  &none  &none   &none   &none   &none              &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &none        &none
&none  &none  &none   &none   &none   &none              &macro_ID   &macro_P      &none         &none            &none        &kp LA(LC(DELETE))
&none  &none  &trans  &trans  &trans             &trans  &trans                                                                &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp GRAVE      &kp F1    &kp F2  &kp F3    &kp F4            &kp F5                         &kp F6          &kp F7           &kp F8     &kp F9                &kp F10                &kp F11
&kp LS(GRAVE)  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR        &kp PERCENT                    &kp CARET       &kp AMPERSAND    &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&none          &none     &none   &none     &kp LEFT_BRACKET  &kp RIGHT_BRACKET              &kp LEFT_BRACE  &kp RIGHT_BRACE  &none      &kp F12               &kp INTERNATIONAL_3    &trans
&trans         &trans    &trans  &trans    &trans                                   &trans  &trans                                                                                   &kp INTERNATIONAL_1
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans     &trans     &trans  &trans  &trans  &trans              &trans  &trans     &trans         &trans     &trans  &trans
&trans     &trans     &trans  &trans  &trans  &trans              &trans  &mkp LCLK  &Mouse_double  &mkp RCLK  &trans  &trans
&trans     &trans     &trans  &trans  &trans  &trans              &trans  &trans     &trans         &trans     &trans  &trans
&mkp LCLK  &mkp RCLK  &trans  &trans  &trans              &trans  &trans                                               &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };
    };
};
